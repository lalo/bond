dist: trusty
# trusty requires virtualization, which is set by 'sudo: required'
sudo: required
language: csharp
os:
    - linux
cache:
    directories:
        - compiler/.cabal-sandbox
        - cs/packages
        - /home/travis/.ccache
env:
    - BOND_LANG="cs"
    - BOND_LANG="cpp" BOOST="1.63.0"
    - BOND_LANG="cpp" BOOST="1.62.0"
    - BOND_LANG="cpp" BOOST="1.61.0"
    - BOND_LANG="cpp" BOOST="1.60.0"
    - BOND_LANG="cpp" BOOST="1.59.0"
    - BOND_LANG="cpp" BOOST="1.58.0"
    - BOND_LANG="cpp" BOOST="1.63.0" COMM="true"
    - BOND_LANG="cpp" BOOST="1.63.0" GRPC="true"
    - BOND_LANG="hs" GHC_VERSION="7.8.4"
    - BOND_LANG="hs" GHC_VERSION="7.6.3"
addons:
  apt:
    sources:
        - ubuntu-toolchain-r-test
        - hvr-ghc
    packages:
        - g++-4.8
        - cabal-install-1.22
        - ghc-7.8.4
        - ghc-7.6.3
        - ghc
        - ccache
        - wget

before_install:
    - if [ "$TRAVIS_OS_NAME" == "linux" ]; then echo "Hardware:"; grep model\ name /proc/cpuinfo | uniq -c; free -m; fi
    # linux prereqisite packages
    - if [ "$TRAVIS_OS_NAME" == "linux" ]; then wget --no-check-certificate https://www.cmake.org/files/v3.2/cmake-3.2.3-Linux-x86_64.tar.gz; fi
    - if [ "$TRAVIS_OS_NAME" == "linux" ]; then tar -xf cmake-3.2.3-Linux-x86_64.tar.gz; fi
    - if [ "$TRAVIS_OS_NAME" == "linux" ]; then export PATH=$PWD/cmake-3.2.3-Linux-x86_64/bin:$PATH; fi
    # set defaults
    - if [ "$CXX" == "" ]; then echo "Setting default $CXX"; export CXX="clang++"; fi
    - if [ "$CC" == "" ]; then echo "Setting default $CC"; export CC="clang"; fi
    - if [ "$BOOST" == "" ]; then echo "Setting default $BOOST"; export BOOST=1.63.0; fi
    - if [ "$COMM" == "" ]; then echo "Skipping Comm"; export BUILD_COMM="false"; else echo "Building Comm"; export BUILD_COMM="true"; fi
    - if [ "$GRPC" == "" ]; then echo "Skipping gRPC"; export BUILD_GRPC="false"; else echo "Building gRPC"; export BUILD_GRPC="true"; fi
    # pull down our boost binaries
    - export BOOST_ARCHIVE=boost-$BOOST.tar.xz
    - wget https://bondboostbinaries.blob.core.windows.net/bondboostbinaries/$BOOST_ARCHIVE -O /tmp/$BOOST_ARCHIVE
    - pushd /; sudo tar -xf /tmp/$BOOST_ARCHIVE; popd
    - export BOOST_ROOT=/opt/boost_`echo $BOOST | tr . _`
    # ccache splits up your C{,XX}FLAGS and makes separate preprocessor and
    # compiler calls. It includes a few flags that aren't used by one half of
    # the process or the other. -Qunused-arguments prevents clang from failing
    # the build because of this.
    - export CXX="ccache $CXX -Qunused-arguments --system-header-prefix=boost/"
    - export CC="ccache $CC -Qunused-arguments --system-header-prefix=boost/"
    - echo "CXX=$CXX"
    - echo "CC=$CC"
    # nunit installation
    - if [ "$BOND_LANG" == "cs" ]; then travis_retry nuget install NUnit.Runners -version 2.6.4; fi
    - export PATH=/opt/cabal/1.22/bin:/opt/ghc/${GHC_VERSION}/bin:$PATH
    - cabal update
    - cabal install happy Cabal

before_script:
    # restore nuget packages for solution
    - if [ "$BOND_LANG" == "cs" ]; then travis_retry nuget restore cs/cs.sln; fi

script:
    - mkdir build && cd build

    - cmake -DBOND_ENABLE_COMM:bool=$BUILD_COMM -DBOND_ENABLE_GRPC:bool=$BUILD_GRPC ..
    - if [ "$BOND_LANG" == "cs" ]; then make --jobs 2 DESTDIR=$HOME install; fi
    - if [ "$BOND_LANG" == "cs" ]; then cd ..; fi
    - if [ "$BOND_LANG" == "cs" ]; then export BOND_COMPILER_PATH=$HOME/usr/local/bin; fi
    - if [ "$BOND_LANG" == "cs" ]; then xbuild /p:Configuration=Debug cs/cs.sln; fi
    - if [ "$BOND_LANG" == "cs" ]; then xbuild /p:Configuration=Fields cs/cs.sln; fi
    - if [ "$BOND_LANG" == "cs" ]; then mono NUnit.Runners.2.6.4/tools/nunit-console.exe -framework=mono-4.5 -labels cs/test/core/bin/debug/net45/Properties/Bond.UnitTest.dll cs/test/core/bin/debug/net45/Fields/Bond.UnitTest.dll cs/test/internal/bin/debug/net45/Bond.InternalTest.dll; fi
    - if [ "$BOND_LANG" == "cpp" ]; then make --jobs 2 check; fi
    - if [ "$BOND_LANG" == "hs" ]; then make gbc-tests; fi
    - if [ "$BOND_LANG" == "hs" ]; then cd ../compiler; fi
    - if [ "$BOND_LANG" == "hs" ]; then ../build/compiler/build/gbc-tests/gbc-tests; fi
